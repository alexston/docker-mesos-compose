version: "2"

services:
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    restart: always
    ports:
      - 2181:2181

  mesos-master:
    image: mesosphere/mesos-master:1.2.0
    hostname: mesos-master
    entrypoint: [ "mesos-master" ]
    ports:
      - "5050:5050"
    links:
      - zookeeper
    environment:
      - MESOS_CLUSTER=local
      - MESOS_HOSTNAME=localhost
      - MESOS_LOG_DIR=/var/log
      - MESOS_QUORUM=1
      - MESOS_REGISTRY=in_memory
      - MESOS_WORK_DIR=/var/lib/mesos
      - MESOS_ROLES=public
      - MESOS_ZK=zk://zookeeper:2181/mesos


  mesos-slave:
    image: mesosphere/mesos-slave:1.2.0
    entrypoint:
      - mesos-slave
    privileged: true
    hostname: mesos-slave
    ports:
      - "5051:5051"
    links:
      - zookeeper
      - mesos-master
    environment:
      - MESOS_HOSTNAME=localhost
      - MESOS_CONTAINERIZERS=docker,mesos
      - MESOS_ISOLATOR=cgroups/cpu, cgroups/mem
      - MESOS_LOG_DIR=var/log
      - MESOS_MASTER=zk://zookeeper:2181/mesos
      - MESOS_PORT=5051
      - MESOS_WORK_DIR=/var/lib/mesos
      - MESOS_EXECUTOR_REGISTRATION_TIMEOUT=5mins
      - MESOS_EXECUTOR_SHUTDOWN_GRACE_PERIOD=90secs
      - MESOS_DOCKER_STOP_TIMEOUT=60secs
      - MESOS_RESOURCES=cpus:4;mem:1280;disk:25600;ports(*):[12000-12999]
    volumes:
      # link your host machine docker services, MESOS_CONTAINERIZERS can be:"docker,mesos"
      - /var/run/docker.sock:/var/run/docker.sock

  marathon-service:
    image: mesosphere/marathon:latest
    ports:
      - "8080:8080"
    links:
      - zookeeper
      - mesos-master
    environment:
      - MARATHON_ZK=zk://zookeeper:2181/marathon
      - MARATHON_MASTER=zk://zookeeper:2181/mesos
      - MARATHON_DECLINE_OFFER_DURATION=3600000
      - MARATHON_MESOS_ROLE=public

